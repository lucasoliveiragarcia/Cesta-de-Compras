// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CestaCompra.Aplicacao.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Cadastrar Consumidor")]
    public partial class CadastrarConsumidorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CadastrarConsumidor.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-br"), "Cadastrar Consumidor", "\tCadastro de consumidor no sistema.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sucesso em Cadastrar Consumidor")]
        [NUnit.Framework.TestCaseAttribute("Clovis", "Sena", "20/04/1953", "clovis.sena@gmail.com", "xyz$33", "Rua Joao Vicente", "25", "Apto 45", "29105-010", "Vila Velha", null)]
        public virtual void SucessoEmCadastrarConsumidor(string nome, string sobrenome, string dataNasc, string e_Mail, string senha, string logradouro, string numero, string compl_, string cEP, string cidade, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sucesso em Cadastrar Consumidor", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("eu acesso o site <Cesta de Compras>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 8
testRunner.And("eu escolho a opção <Cadastrar>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 9
testRunner.And("O sistema exibe a tela de cadastramento de consumidor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 10
testRunner.And("Eu preencho todos os dados solicitados.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 11
testRunner.And("Eu informo <nome>, <sobrenome>, <datanasc>, <login>, <email>,<senha>,<logradouro>" +
                    ",<numero>,<complemento>,<cep>,<cidade>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 12
testRunner.When("Eu confirmo pressionando <cadastrar>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 13
testRunner.Then("o sistema conclui o cadastro e me habilita como usuário e eu posso começar a usar" +
                    " o aplicativo.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Falha em Cadastrar Consumidor")]
        public virtual void FalhaEmCadastrarConsumidor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Falha em Cadastrar Consumidor", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given("eu não preencho corretamente os dados solicitados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 21
testRunner.Then("o sistema retorna dados incorretos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
